[{"C:\\Users\\meder\\PycharmProjects\\Datacamp_Efrei_20235\\tuneteller\\src\\index.js":"1","C:\\Users\\meder\\PycharmProjects\\Datacamp_Efrei_20235\\tuneteller\\src\\App.js":"2","C:\\Users\\meder\\PycharmProjects\\Datacamp_Efrei_20235\\tuneteller\\src\\reportWebVitals.js":"3","C:\\Users\\meder\\PycharmProjects\\Datacamp_Efrei_20235\\tuneteller\\src\\components\\display.jsx":"4","C:\\Users\\meder\\PycharmProjects\\Datacamp_Efrei_20235\\tuneteller\\src\\components\\home.jsx":"5","C:\\Users\\meder\\PycharmProjects\\Datacamp_Efrei_20235\\tuneteller\\src\\components\\select.jsx":"6"},{"size":552,"mtime":1698339842012,"results":"7","hashOfConfig":"8"},{"size":578,"mtime":1698339841998,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1698339842014,"results":"10","hashOfConfig":"8"},{"size":2947,"mtime":1698339842002,"results":"11","hashOfConfig":"8"},{"size":3719,"mtime":1698339842003,"results":"12","hashOfConfig":"8"},{"size":4218,"mtime":1698339842004,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u78ixm",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"C:\\Users\\meder\\PycharmProjects\\Datacamp_Efrei_20235\\tuneteller\\src\\index.js",[],[],"C:\\Users\\meder\\PycharmProjects\\Datacamp_Efrei_20235\\tuneteller\\src\\App.js",[],[],"C:\\Users\\meder\\PycharmProjects\\Datacamp_Efrei_20235\\tuneteller\\src\\reportWebVitals.js",[],[],"C:\\Users\\meder\\PycharmProjects\\Datacamp_Efrei_20235\\tuneteller\\src\\components\\display.jsx",["35","36","37"],[],"import React, {useEffect, useState} from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport home from \"../img/home_white.png\";\r\nimport \"../styles/home.css\";\r\nimport \"../styles/display.css\";\r\nimport music from \"../img/music.png\";\r\n\r\n\r\n\r\nfunction Display() {\r\n    const listeDeChansons = sessionStorage.getItem('selected_songs');\r\n    console.log(listeDeChansons);\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/display_recommendation', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({maVariable: listeDeChansons}),\r\n        })\r\n            .then((response) => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                } else {\r\n                    throw new Error(\"Réponse du serveur non valide\");\r\n                }\r\n            })\r\n            .then((data) => {\r\n                setSongData(data.recommendation);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Erreur lors de la requête :\", error);\r\n            });\r\n    });\r\n\r\n    const [songData, setSongData] = useState([]);\r\n    const [numDisplayed, setNumDisplayed] = useState(10);\r\n\r\n    const location = useLocation();\r\n\r\n    const handleNumDisplayedChange = (event) => {\r\n        setNumDisplayed(parseInt(event.target.value));\r\n    };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div id=\"stars\"></div>\r\n      <div id=\"stars2\"></div>\r\n      <div id=\"stars3\"></div>\r\n      <Link to={\"/\"} id='link'>\r\n        <img id='home' src={home} alt=\"\" />\r\n      </Link>\r\n      <div id=\"title\">\r\n        {location.state}\r\n      </div>\r\n      <div id='wrap'>\r\n        <div id='recommendation'>\r\n            <div>\r\n                <label htmlFor=\"numDisplayed\" id=\"contentDisplayed\">Number of Songs to Display: </label>\r\n                <select id=\"numDisplayed\" name=\"numDisplayed\" value={numDisplayed} onChange={handleNumDisplayedChange}>\r\n                    <option value={10}>10</option>\r\n                    <option value={20}>20</option>\r\n                    <option value={50}>50</option>\r\n                    <option value={100}>100</option>\r\n                </select>\r\n            </div>\r\n            <div id='recotxt'>Recommendation</div>\r\n            <div id='reco-container'>\r\n            {songData.slice(0, numDisplayed).map((tsong) => (\r\n                <div id=\"song\" key={tsong.id}>\r\n                    <img id=\"music\" src={music} alt=\"\" />\r\n                    <div id=\"song-details\">\r\n                        <p id=\"song-name\">{tsong.song}</p>\r\n                        <p id=\"artist-name\">{tsong.singer}</p>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Display;","C:\\Users\\meder\\PycharmProjects\\Datacamp_Efrei_20235\\tuneteller\\src\\components\\home.jsx",["38","39"],[],"import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport logoEfrei from \"../img/logo_efrei2.png\";\r\nimport simple from \"../img/simple.png\";\r\nimport rapide from \"../img/rapide.png\";\r\nimport efficace from \"../img/efficace.png\";\r\nimport \"../styles/home.css\";\r\n\r\nfunction Home() {\r\n  const [isBarOpen, setIsBarOpen] = useState(false);\r\n  const [selectedContent, setSelectedContent] = useState(\"navtext\");\r\n\r\n  const toggleBar = () => {\r\n    if (isBarOpen) {\r\n      closebar();\r\n    } else {\r\n      openbar();\r\n    }\r\n    setIsBarOpen(!isBarOpen);\r\n  };\r\n\r\n  function openbar(e) {\r\n    const barElement = document.getElementById('bar');\r\n    const navBarElement = document.getElementById('navbar');\r\n    barElement.classList.add('active');\r\n    navBarElement.classList.add('active');\r\n  }\r\n\r\n  function closebar() {\r\n    const barElement = document.getElementById('bar');\r\n    const navBarElement = document.getElementById('navbar');\r\n    barElement.classList.remove('active');\r\n    navBarElement.classList.remove('active');\r\n  }\r\n\r\n  const handleContentChange = (content) => {\r\n    setSelectedContent(content);\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div id=\"stars\"></div>\r\n      <div id=\"stars2\"></div>\r\n      <div id=\"stars3\"></div>\r\n      <div id=\"title\">\r\n        TuneTeller\r\n      </div>\r\n      <div id=\"slogan\">\r\n        \"Let the Music Tell Your Tune\"\r\n      </div>\r\n      <Link to={\"/select\"}>\r\n        <button id=\"test\">What's your tune ?</button>\r\n      </Link>\r\n      <div className='sidebar'>\r\n          <button id=\"bar\" onClick={toggleBar}></button>\r\n      </div>\r\n      <div id='navbar'>\r\n        <div id='navwrap'>\r\n          <div id='navmenu'>\r\n            <button id='menutxt' onClick={() => handleContentChange(\"navmenu\")}>Guide</button>\r\n          </div>\r\n          <div id='navmenu2'>\r\n            <button id='menutxt2' onClick={() => handleContentChange(\"navmenu2\")}>Advantages</button>\r\n          </div>\r\n          <div id='navmenu3'>\r\n            <button id='menutxt3' onClick={() => handleContentChange(\"navmenu3\")}>Credits</button>\r\n          </div>\r\n          <div>\r\n          {selectedContent === \"navmenu\" && (\r\n            <div id='navtext'>The use of our service is very simple. You just have to enter\r\n              a song or select a song of your choice. With this simple manipulation, \r\n              we will be able to return a few songs that you will be most likeky to love.\r\n            </div>\r\n          )}\r\n          {selectedContent === \"navmenu2\" && (\r\n            <div>\r\n              <div id='wrap_img'>\r\n                <img id='img1' src={simple} alt=\"\" />\r\n                <img id='img2' src={rapide} alt=\"\" />\r\n                <img id='img3' src={efficace} alt=\"\" />\r\n              </div>\r\n              <div id='navtext2'>\r\n                You always wondered what kind of tune you would be into.\r\n                Don't worry anymore, TuneTeller has been made for you.\r\n                TuneTeller is an API service that will you help you search \r\n                for new musics which you will certainly like. Our service \r\n                will propose different songs depending on your own music taste.\r\n              </div>\r\n            </div>\r\n          )}\r\n          {selectedContent === \"navmenu3\" && (\r\n            <div>\r\n              <div id='navtext3'>Data Camp Project</div>\r\n              <div id='navtext4'>Team Members: Jean- Baptiste CAPELLA (BIA1), Kevin OP (BIA2), Médéric PENIGUEL (DAI)</div>\r\n              <img id='logo' src={logoEfrei} alt=\"\" />\r\n            </div>\r\n          )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","C:\\Users\\meder\\PycharmProjects\\Datacamp_Efrei_20235\\tuneteller\\src\\components\\select.jsx",["40","41"],[],"import React, {useEffect, useState} from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport home from \"../img/home_white.png\";\r\nimport music from \"../img/music.png\";\r\nimport \"../styles/home.css\";\r\nimport \"../styles/select.css\";\r\n\r\nfunction Select() {\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/select', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({maVariable: 'ok'}),\r\n        })\r\n            .then((response) => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                } else {\r\n                    throw new Error(\"Réponse du serveur non valide\");\r\n                }\r\n            })\r\n            .then((data) => {\r\n                setFetchedData(data); // Assurez-vous d'avoir une variable d'état pour stocker les données\r\n                setSongData(data.variable);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Erreur lors de la requête :\", error);\r\n            });\r\n    });\r\n\r\n\r\n\r\n// Assurez-vous d'avoir une variable d'état pour stocker les données\r\nconst [fetchedData, setFetchedData] = useState([]);\r\n\r\n// Vous pouvez maintenant utiliser \"fetchedData\" dans votre composant\r\n\r\n\r\n    console.log(fetchedData.variable);\r\n\r\n    const [selectedSongs, setSelectedSongs] = useState([]);\r\n    const navigate = useNavigate();\r\n    const [songData, setSongData] = useState([]);\r\n\r\n\r\n    const handleSongClick = (song) => {\r\n        if (!selectedSongs.some(selectedSong => selectedSong.id === song.id)) {\r\n            const updatedSelection = [...selectedSongs, song];\r\n            setSelectedSongs(updatedSelection);\r\n            sessionStorage.setItem('selected_songs', JSON.stringify(selectedSongs));\r\n\r\n        }\r\n    };\r\n    const handleRemoveSong = (songId) => {\r\n        const updatedSelection = selectedSongs.filter(song => song.id !== songId);\r\n        setSelectedSongs(updatedSelection);\r\n    };\r\n    const handleLetTuneItClick = () => {\r\n        console.log(\"selectedSongs:\", selectedSongs);\r\n        sessionStorage.setItem('selected_songs', JSON.stringify(selectedSongs));\r\n        navigate(\"/display\", { state: { selectedSongs } });\r\n    };\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div id=\"stars\"></div>\r\n      <div id=\"stars2\"></div>\r\n      <div id=\"stars3\"></div>\r\n      <Link to={\"/\"}>\r\n        <div id=\"home-container\">\r\n            <img id='home' src={home} alt=\"\" />\r\n        </div>\r\n      </Link>\r\n      <div id=\"title\">\r\n        TuneTeller\r\n      </div>\r\n      <div id='wrap'>\r\n        <div id='selection'>\r\n            <div id='selectxt'>Selection</div>\r\n            <div id='songs-display'>\r\n                {selectedSongs.map((song2) =>(\r\n                    <div id='song2' key={song2.id}>\r\n                        <img id=\"music\" src={music} alt=\"\" />\r\n                        <div id=\"song-details\">\r\n                            <p id=\"song-name2\">{song2.song}</p>\r\n                            <p id=\"artist-name2\">{song2.singer}</p>\r\n                        </div>\r\n                        <button id='remove' onClick={() => handleRemoveSong(song2.id)}>\r\n                            X\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n        <div id='allsongs'>\r\n            <div id='alltxt'>Available songs</div>\r\n            <div id='songs-container'>\r\n            {songData.map((tsong) => (\r\n                <div id=\"song\" key={tsong.id} onClick={() => handleSongClick(tsong)}>\r\n                    <img id=\"music\" src={music} alt=\"\" />\r\n                    <div id=\"song-details\">\r\n                        <p id=\"song-name\">{tsong.song}</p>\r\n                        <p id=\"artist-name\">{tsong.singer}</p>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <Link to={\"/display\"}>\r\n        <button id=\"launch\" onClick={handleLetTuneItClick}>Let's tune it !!!</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Select;",{"ruleId":"42","severity":1,"message":"43","line":2,"column":27,"nodeType":"44","messageId":"45","endLine":2,"endColumn":33},{"ruleId":"42","severity":1,"message":"46","line":2,"column":35,"nodeType":"44","messageId":"45","endLine":2,"endColumn":40},{"ruleId":"42","severity":1,"message":"47","line":3,"column":10,"nodeType":"44","messageId":"45","endLine":3,"endColumn":19},{"ruleId":"42","severity":1,"message":"43","line":2,"column":27,"nodeType":"44","messageId":"45","endLine":2,"endColumn":33},{"ruleId":"42","severity":1,"message":"46","line":2,"column":35,"nodeType":"44","messageId":"45","endLine":2,"endColumn":40},{"ruleId":"42","severity":1,"message":"43","line":2,"column":27,"nodeType":"44","messageId":"45","endLine":2,"endColumn":33},{"ruleId":"42","severity":1,"message":"46","line":2,"column":35,"nodeType":"44","messageId":"45","endLine":2,"endColumn":40},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'useParams' is defined but never used."]